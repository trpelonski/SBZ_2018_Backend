package eventRules;

import com.ftn.SBZ_2018_Projekat.SBZ_2018_Projekat.model.Disease;
import com.ftn.SBZ_2018_Projekat.SBZ_2018_Projekat.model.Diagnostic;
import com.ftn.SBZ_2018_Projekat.SBZ_2018_Projekat.model.DiagnosticDisease;
import com.ftn.SBZ_2018_Projekat.SBZ_2018_Projekat.model.Patient;
import com.ftn.SBZ_2018_Projekat.SBZ_2018_Projekat.events.HeartBeatEvent;
import com.ftn.SBZ_2018_Projekat.SBZ_2018_Projekat.events.UrinationEvent;
import com.ftn.SBZ_2018_Projekat.SBZ_2018_Projekat.events.PatientOxygen;
import com.ftn.SBZ_2018_Projekat.SBZ_2018_Projekat.events.OxygenLevelRisingEvent;
import com.ftn.SBZ_2018_Projekat.SBZ_2018_Projekat.events.OxygenLevelDroppingEvent;

/*rule "Uvecaj nivo kiseonika"
	no-loop true
	lock-on-active true
	when
		OxygenLevelRisingEvent ( $patientOxygen : patientOxygen, $amount : amount )
		$po : PatientOxygen ( this == $patientOxygen )
	then
		modify($po) { setLevel(getLevel()+$amount); }
end

rule "Smanji nivo kiseonika"
	no-loop true
	lock-on-active true
	when
		OxygenLevelDroppingEvent ( $patientOxygen : patientOxygen, $amount : amount )
		$po : PatientOxygen ( this == $patientOxygen )
	then
		modify($po) { setLevel(getLevel()-$amount); }
end

rule "Problemi sa kiseonikom"
	when
		$po : PatientOxygen ( level < 70 )
		not ( OxygenLevelRisingEvent ( patientOxygen == $po )
			  over window:time(15m) )
	then

end
*/
rule "Ubrzani srcani ritam"
	when
		Patient ( $id : id )
		Number ( intValue > 25 ) from accumulate(
			HeartBeatEvent ( patientId == $id )
			over window:time(10s),
			count(1)
		)
	then
		System.out.println("Pacijent "+$id+" ima ubrzani srcani ritam");
end

/*rule "Hitno potrebna dijaliza"
	when
		Patient ( $id : id, $diagnostics, diagnostics)
		Diagnostic ( $diagnosticDiseases : diagnosticDiseases ) from $diagnostics
		DiagnosticDisease ( $disease : disease ) from $diagnosticDiseases
		Disease ( id == 7 ) from $disease	
		Number ( intValue > 10 ) from accumulate(
			HeartBeatEvent ( patientId == $id )
			over window:time(10s),
			count(1)
		)
		Number ( doubleValue < 100.0 ) from accumulate(
			UrinationEvent ( patientId == $id, $amount : amount )
			over window:time(12h),
			sum($amount)
		)	
	then

end
*/

